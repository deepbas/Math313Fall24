{
  "hash": "9548594ef1faf0e860ecc7a807918928",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 23\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"MATH 313: Survey Design and Sampling\"\nauthor: \"Bastola\"\nformat:\n  revealjs:\n    html-math-method: mathjax\n    mathjax-url: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/MathJax.js\"\n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: \n      src: chalkboard.json\n      eraser:\n        src: 'img/sponge.png'\n        radius: 20\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n\n\n## Difference Estimator of $\\mu_y$ {.font80}\n\n::: cle6\n\n\n- The Difference Estimation method adjusts the sample mean $\\bar{y}$ by a value dependent on the difference $(\\mu_x - \\bar{x})$.\n- This method is akin to a special case of regression where the regression coefficient $b$ is set to 1, simplifying the estimation process.\n\n:::\n\n## Assumptions and Methodology {.font80}\n\n::: cle6\n- Assume a linear relationship without a slope component: $y = x + a$.\n- Thus, any change in $x$ directly translates to a change in $y$: \n  $$\n  \\mu_y - \\bar{y} = \\mu_x - \\bar{x}\n  $$\n\n:::\n\n## Formulation of the Difference Estimator {.font80}\n\n::: cle6\n- The difference estimator for the population mean $\\mu_y$ is:\n  $$\n  \\hat{\\mu}_{y D} = \\bar{y} + (\\mu_x - \\bar{x}) = \\mu_x + (\\bar{y} - \\bar{x})\n  $$\n- Here, $\\bar{d} = \\bar{y} - \\bar{x}$ represents the average difference between the variables.\n\n:::\n\n## Variance of the Difference Estimator {.font80}\n\n::: cle6\n- The estimated variance of $\\hat{\\mu}_{y D}$ is given by:\n  $$\n  \\hat{V}(\\hat{\\mu}_{y D}) = \\left(1-\\frac{n}{N}\\right) \\cdot \\left(\\frac{1}{n}\\right) \\cdot \\frac{\\sum_{i=1}^n\\left(y_i - x_i - \\bar{d}\\right)^2}{(n-1)}\n  $$\n- This accounts for the sampling variability and the differences between the paired observations.\n\n:::\n\n## Error Bounds and Confidence Interval {.font80}\n\n::: cle6\n- $(1-\\alpha) \\times 100\\%$ bound on the error of estimation:\n  $$\n  B = t_{1-\\frac{\\alpha}{2}, (n-1)} \\cdot \\sqrt{\\hat{V}(\\hat{\\mu}_{y D})}\n  $$\n- Confidence Interval for $\\hat{\\mu}_{y D}$:\n  $$\n  \\hat{\\mu}_{y D} \\pm B\n  $$\n- This interval estimates where the true mean $\\mu_y$ lies with $(1-\\alpha) \\times 100\\%$ confidence.\n\n:::\n\n\n## {.font40}\n\n> Example 1: Auditors are often interested in comparing the audited value of items with the bookvalue. Generally, book values are known for every item in the population, and auditvalues are obtained for a sample of these items. The book values can then be used toobtain a good estimate of the total or average audit value for the population. Suppose a population contains 180 inventory items with a stated book value of $\\$ 13,320$. Let $x_i$ denote the book value and $y_i$ the audit value of the $i$ th item. A simple random sample of items yields the results shown in the following table. A plot of these data shows them to lie along a straight line through the origin, with a slope fairly close to 1 . Estimate the mean audit value of $\\mu_y$ by the difference method for this population (estimator value, estimated variance, $95 \\%$ bound on error, and $95 \\%$ confidence interval).\n\n\n<img src=\"images/Day23-1.png\" style=\"display: block; margin: auto;\" width=\"60%\"  loading=\"lazy\" decoding=\"async\">\n\n##\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}