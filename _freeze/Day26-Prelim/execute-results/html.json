{
  "hash": "7b697ba6e1bdb7f8e247ec42ae11f5a4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 26\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"MATH 313: Survey Design and Sampling\"\nauthor: \"Bastola\"\nformat:\n  revealjs:\n    html-math-method: mathjax\n    mathjax-url: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/MathJax.js\"\n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: \n      src: chalkboard.json\n      eraser:\n        src: 'img/sponge.png'\n        radius: 20\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n\n\n## Overview of Systematic Sampling {.font80}\n\n::: cle6\n\nSystematic sampling simplifies the sampling process, especially when the population size $N$ is known:\n\n- Choose $k \\leq \\frac{N}{n}$ to obtain approximately $n$ observations.\n- For $k=150$ and $n=100$, exactly 100 observations are obtained.\n\n**Key Point:** When $N$ is unknown, guessing $k$ can lead to an imbalanced sample, potentially requiring multiple sampling attempts.\n\n:::\n\n## Estimation of Population Mean {.font80}\n\n::: cle7\n\nThe population mean $\\mu$ can be estimated from a systematic sample using the sample mean $\\bar{y}_{\\text{sy}}$:\n\n$$\n\\hat{\\mu} = \\bar{y}_{\\text{sy}} = \\frac{\\sum_{i=1}^{n} y_i}{n}\n$$\n\n**Variance Estimation:**\n$$\n\\hat{V}(\\bar{y}_{\\text{sy}}) = \\left(1-\\frac{n}{N}\\right) \\frac{s^2}{n}\n$$\n\nThis assumes the population is randomly ordered. The estimated variance matches that of simple random sampling under similar conditions.\n\n:::\n\n## Variance Considerations in Systematic Sampling {.font70}\n\n::: cle8\n\nSystematic sampling can exhibit different variance properties based on the population structure:\n\n- **Random Population:** $\\rho \\approx 0$, variance is similar to simple random sampling.\n- **Ordered Population:** $\\rho < 0$, potentially lower variance than simple random sampling.\n- **Periodic Population:** $\\rho > 0$, possibly higher variance due to repetitive patterns.\n\n**Variance Formula:**\n$$\nV(\\bar{y}_{\\text{sy}}) = \\frac{\\sigma^2}{n} [1 + (n-1) \\rho]\n$$\n\nThe correlation $\\rho$ affects variance estimation significantly depending on the population's arrangement.\n\n:::\n\n## Practical Implications and Applications{.font80}\n\n::: cle9\n\nSystematic sampling is advantageous for its ease of use, especially in environments where manual sampling is necessary. However, its effectiveness is contingent on the population's ordering:\n\n- **Advantages:** Easier to implement and can be more informative per unit cost than simple random sampling.\n- **Challenges:** The single-cluster approach complicates variance estimation, requiring careful consideration of the population's structure.\n\nApplications range from industrial quality control to voter registration sampling.\n\n:::\n\n\n\n\n## {.font40}\n\n> Example 1: \n\n\n##\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}