{
  "hash": "2a5da0a847e071d7e8bbf9360165c799",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 16\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"MATH 313: Survey Design and Sampling\"\nauthor: \"Bastola\"\nformat:\n  revealjs:\n    html-math-method: mathjax\n    mathjax-url: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/MathJax.js\"\n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: \n      src: chalkboard.json\n      eraser:\n        src: 'img/sponge.png'\n        radius: 20\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n\n## Issues in Stratified Sampling: Budget Constraints {.font70}\n\n::: cle6\nUnderstanding the complexities and challenges of stratified random sampling is crucial for enhancing survey accuracy and efficiency. By addressing common issues such as budget constraints and optimal strata selection:\n\n- We recognize that not all sampling can afford ideal sample sizes due to budget limits.\n- Optimal allocation under fixed budgets aims to minimize variance, enhancing survey design to maximize resource use.\n- This approach not only improves decision-making based on the data collected but also contributes to developing sophisticated statistical analysis techniques that are robust against real-world challenges.\n:::\n\n## Allocation Formula {.font80}\n\n::: cle7\nUse the proportional allocation formula to determine sample sizes:\n$$n_i =  \\frac{C}{\\sum_{i=1}^k c_i w_i}  w_i$$\nWhere:\n\n- $n_i$ = sample size for stratum $i$\n- $C$ = total budget\n- $c_i$ = cost per unit sampled in stratum $i$\n- $w_i$ = weight (proportion) of stratum $i$ in the population\n:::\n\n\n\n## Optimal Rule for Choosing Strata {.font80}\n\n::: cle9\nGoal: Minimize variance of the estimator.\nStrata should be homogeneous internally and heterogeneous externally.\n:::\n\n#### Cumulative Square Root of Frequency Method {.font80}\n\n::: cle10\nUseful for delineating strata based on available frequency data.\nSummarize and stratify based on the cumulative square root of category frequencies.\nGenerally, limit to five or six strata to avoid over-complication.\n:::\n\n## Practical Example {.font80}\n\n::: cle11\nStratify a population by income to estimate average household income:\n\n1. Group low-income households in one stratum.\n2. Group high-income households in another stratum.\n\nThis method is theoretical as it requires prior knowledge of incomes.\n:::\n\n## {.font60}\n\n> Example 1: In the television viewing example $\\left(N_1=155, N_2=62\\right.$, and $\\left.N_3=93\\right)$, the cost of obtaining an observation is $c_1=c_2=\\$ 9, c_3=\\$ 16$. Let the stratum standard deviations be approximated by $\\sigma_1 \\approx 5, \\sigma_2 \\approx 15, \\sigma_3 \\approx 10$. Given that the advertising firm has only $\\$ 500$ to spend on sampling, choose the sample size and the allocation that minimize $V\\left(\\bar{y}_{s t}\\right)$.\n\n\n\n## {.font60}\n\n> Example 2: In the television viewing example $\\left(N_1=155, N_2=62\\right.$, and $\\left.N_3=93\\right)$, the cost of obtaining an observation is $c_1=c_2=\\$ 9, c_3=\\$ 16$. Let the stratum standard deviations-be approximated by $p_1 \\approx 0.80, p_2 \\approx 0.25, p_3 \\approx 0.50$ using some similar survey performed two years ago. Given that the advertising firm has only $\\$ 500$ to spend on sampling, choose the sample size and the allocation that $minimize V\\left(\\hat{p}_{s t}\\right)$.\n\n\n## {.font60}\n\n> Example 3: An investigator wishes to estimate the average yearly sales for 56 firms, using a sample of $n=15$ firms. Frequency data on these firms is available in the form of classification by $\\$ 50,000$ increments and appears in the accompanying table. How can we best allocate the firms to $L=3$ strata?\n<center>\n![](images/frequency_approach.png){width=60%}</center>\n\n\n##\n\n\n##\n\n\n##\n\n\n##\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}