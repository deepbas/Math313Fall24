{
  "hash": "e2bd984938ad75922626f0749e75ff48",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 22\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"MATH 313: Survey Design and Sampling\"\nauthor: \"Bastola\"\nformat:\n  revealjs:\n    html-math-method: mathjax\n    mathjax-url: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/MathJax.js\"\n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: \n      src: chalkboard.json\n      eraser:\n        src: 'img/sponge.png'\n        radius: 20\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n\n\n## Regression Estimator of $\\mu_y$ {.font80}\n\n::: cle6\n- Use regression estimator when there is evidence of a linear relationship between $y$ and $x$, without the restriction of passing through the origin.\n- Essential for situations where the auxiliary variable $x$ provides valuable information for estimating the mean $\\mu_y$.\n\n:::\n\n## Assumptions {.font80}\n\n::: cle6\n- Linear relationship modeled as:\n$$\ny_i = a + b x_i + \\varepsilon_i\n$$\n- Where $\\varepsilon_i$ represents random errors which we assume have a mean of zero and are independent of $x_i$.\n\n:::\n\n## Estimation without the Error Term {.font80}\n\n::: cle6\n- Ignoring the error, the predicted value of $y_i$:\n$$\n\\hat{y}_i = \\bar{y} + b (x_i - \\bar{x})\n$$\n- Coefficient $b$, known as the slope of the regression line, is given by:\n$$\nb = \\frac{\\sum_{i=1}^n [(y_i - \\bar{y})(x_i - \\bar{x})]}{\\sum_{i=1}^n (x_i - \\bar{x})^2}\n$$\n\n:::\n\n## Regression Estimator for Population Mean $\\mu_y$ {.font80}\n\n::: cle6\n- The regression estimator for the population mean is:\n$$\n\\hat{\\mu}_{y L} = \\bar{y} + b(\\mu_x - \\bar{x})\n$$\n- This estimator adjusts the sample mean $\\bar{y}$ for the deviation of the expected value of $x$ from its sample mean, scaled by the regression coefficient $b$.\n\n:::\n\n## Variance of the Regression Estimator {.font80}\n\n::: cle6\n- The variance of $\\hat{\\mu}_{y L}$ is estimated as:\n$$\n\\hat{V}(\\hat{\\mu}_{y L}) = \\left(1 - \\frac{n}{N}\\right) \\left(\\frac{1}{n}\\right) \\left(\\frac{\\sum_{i=1}^n (y_i - (\\bar{y} + b (x_i - \\bar{x})))^2}{n-2}\\right)\n$$\n\n:::\n\n## Error Bounds and Confidence Interval {.font80}\n\n::: cle6\n- The $(1-\\alpha) \\times 100\\%$ bound on the error of estimation is calculated using:\n$$\nB = t_{1-\\frac{\\alpha}{2}, n-2} \\cdot \\sqrt{\\hat{V}(\\hat{\\mu}_{y L})}\n$$\n- Consequently, the confidence interval for $\\hat{\\mu}_{y L}$ is:\n$$\n\\hat{\\mu}_{y L} \\pm B\n$$\n- This interval offers a range within which the true population mean is expected to lie with $(1-\\alpha) \\times 100\\%$ confidence.\n\n:::\n\n\n## {.font60}\n\n> Example 1: A mathematics achievement test was given to 486 students prior to their entering a certain college. From these students a simple random sample of tudents was selected and their progress in calculus observed. Final calculus grades were then reported, as given in the following table. It is known that $\\mu_x=52$ for all 486 students taking the achievement test. Estimate $\\mu_y$ for this population (estimator value, estimated variance, $95 \\%$ bound on error, and $95 \\%$ confidence interval).\n\n<img src=\"images/Day22-1.png\" style=\"display: block; margin: auto;\" width=\"60%\"  loading=\"lazy\" decoding=\"async\">\n\n\n\n##\n\n\n##\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}