{
  "hash": "8c40533b7d4c58ebd9cb8e00d1f01c19",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 39\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"MATH 313: Survey Design and Sampling\"\nauthor: \"\"\nformat:\n  revealjs:\n    html-math-method: mathjax\n    mathjax-url: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/MathJax.js\"\n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: \n      src: chalkboard.json\n      eraser:\n        src: 'img/sponge.png'\n        radius: 20\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n\n\n## Introduction to Survey Sampling Challenges {.font90}\n\n::: cle12\n\nIn this section, we explore various survey sampling designs and the common challenges they encounter, such as measurement inaccuracies, nonresponse, and issues with sampling frames. We also discuss strategies to enhance the reliability of statistical estimates.\n:::\n\n## Comprehensive Overview of Survey Sampling Designs {.font80}\n\n::: cle10\n::: row\n::: left\n**Principal Sampling Techniques**\n\n- Simple Random Sampling\n- Stratified Random Sampling\n- Cluster Sampling\n- Systematic Sampling\n\n:::\n\n::: right\n**Predominant Sampling Challenges**\n\n- Biases due to interviewers or measurement instruments\n- Incomplete or inadequate sampling frames\n- Data sensitivity affecting response accuracy\n- Issues arising from nonresponse\n\n:::\n:::\n:::\n\n## Detailed Exploration of Interpenetrating Subsamples {.font80}\n\n::: cle7\nThe concept of interpenetrating subsamples involves dividing a sample of $n$ elements into $k$ groups, assigning each group to different interviewers. This method aims to neutralize interviewer biases and enhance the accuracy of the sample mean.\n\n**Mathematical Formulations**\n\n- Mean of subsample: $\\bar{y}_i = \\frac{1}{m} \\sum_{j=1}^m y_{ij}$\n- Composite sample mean: $\\bar{y} = \\frac{1}{k} \\sum_{i=1}^k \\bar{y}_i$\n- Variance estimation: $\\hat{V}(\\bar{y}) = \\left(1-\\frac{n}{N}\\right) \\frac{s_k^2}{k}$\n\n:::\n\n## Estimating Parameters in Subpopulations {.font80}\n\n::: cle11\n\nSurveying subpopulations presents unique challenges, especially when the subpopulation cannot be explicitly defined from the sampling frame.\n\n**Techniques for Estimation**\n\n- Mean of subpopulation: $\\bar{y}_1 = \\frac{1}{n_1} \\sum_{j=1}^{n_1} y_{1j}$\n- Variance of subpopulation mean: $\\hat{V}(\\bar{y}_1) = \\left(1-\\frac{n_1}{N_1}\\right) \\frac{s_1^2}{n_1}$\n- Total for subpopulation: $N_1 \\bar{y}_1 = \\frac{N_1}{n_1} \\sum_{j=1}^{n_1} y_{1j}$\n\n:::\n\n## Advanced Techniques for Estimation {.font80}\n\n::: cle10\n\nWhen the exact number of subpopulation elements ($N_1$) is unknown, alternative estimation techniques must be employed.\n\n**Formulas for Advanced Estimation**\n\n- Estimation of total without $N_1$: $\\hat{\\tau}_1 = \\frac{N}{n} \\sum_{j=1}^{n_1} y_{1j}$\n- Variance of this estimate: $\\hat{V}(\\hat{\\tau}_1) = N^2 \\left(1-\\frac{n}{N}\\right) \\frac{s_n^2}{n}$\n\n:::\n\n## {.font60}\n\n> EXERCISE 11.1: A researcher is interested in estimating the average yearly medical expenses per family in a community of 545 families. The researcher has eight assistants available to do the fieldwork. Skill is required to obtain accurate information on medical expenses because some respondents are reluctant to give detailed information on their health. Because the assistants differ in their interviewing abilities, the researcher decides to use eight interpenetrating subsamples of five families each, with one assistant assigned to each subsample. Hence, a simple random sample of 40 families is selected and divided into eight random subsamples. The interviews are conducted and yield the results shown in the accompanying table. Estimate the average medical expenses per family for the past year and place a bound on the error of estimation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nexpenses <- read_excel(\"data/EXERCISE11.1.XLS\")\nexpenses %>% knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n| SS1| SS2| SS3| SS4| SS5|  SS6|  SS7| SS8|\n|---:|---:|---:|---:|---:|----:|----:|---:|\n| 101| 157| 689| 322| 837| 1015|  837| 327|\n|  95| 192| 432|  48| 649|  864|  249| 419|\n| 310| 108| 187|  93| 152|  325| 1127| 291|\n| 427| 960| 512| 162| 175|  470|  493| 114|\n| 680| 312| 649| 495| 210|  295|  218| 287|\n\n\n:::\n:::\n\n\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the mean for each subsample\nsubsample_means <- apply(expenses, 2, mean)\nsubsample_means\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  SS1   SS2   SS3   SS4   SS5   SS6   SS7   SS8 \n322.6 345.8 493.8 224.0 404.6 593.8 584.8 287.6 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate the overall mean\noverall_mean <- mean(subsample_means)\noverall_mean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 407.125\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate the sample variance of the subsample means\ns_k_squared <- var(subsample_means)\n```\n:::\n\n\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Constants\nN <- 545   # Total population\nn <- 40    # Sample size\nk <- 8     # Number of subsamples\n\n# Calculate the estimated variance of the sample mean\nhat_V_y <- (1 - n/N) * s_k_squared / k\n\n# Calculate the bound on the error of estimation\nB <- 2 * sqrt(hat_V_y)\nB\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 93.70338\n```\n\n\n:::\n\n```{.r .cell-code}\n# 95% CI\noverall_mean + c(-1,1)*B\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 313.4216 500.8284\n```\n\n\n:::\n:::\n\n\n\n\n## {.font60}\n\n> Exercise 11.2: An experiment is designed to gauge the emotional reaction to a city's decision on school desegregation. A simple random sample of 50 people is interviewed, and the emotional reactions are given a score from 1 to 10 . The scale on which scores are assigned runs from extreme anger to extreme joy. Ten interviewers do the questioning and scoring, with each interviewer working on a random subsample (interpenetrating subsample) of five people. Interpenetrating subsamples are used because of the flexible nature of the scoring. The results are given in the accompanying table. Estimate the average score for people in the city and place a bound on the error of estimation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nexpenses <- read_excel(\"data/EXERCISE11.2.XLS\")\nexpenses %>% knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n| SS1| SS2| SS3| SS4| SS5| SS6| SS7| SS8| SS9| SS10|\n|---:|---:|---:|---:|---:|---:|---:|---:|---:|----:|\n|   5|   4|   9|   8|   6|   1|   6|   5|   2|    9|\n|   4|   6|   8|   5|   4|   5|   4|   6|   4|    7|\n|   6|   5|   9|   4|   5|   6|   3|   7|   4|    8|\n|   1|   2|   7|   6|   7|   4|   5|   3|   5|    6|\n|   8|   7|   5|   3|   9|   7|   2|   4|   3|    4|\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}