{
  "hash": "b33658a1681397cea45d9928963ea3b1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 19\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"MATH 313: Survey Design and Sampling\"\nauthor: \"Bastola\"\nformat:\n  revealjs:\n    html-math-method: mathjax\n    mathjax-url: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/MathJax.js\"\n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: \n      src: chalkboard.json\n      eraser:\n        src: 'img/sponge.png'\n        radius: 20\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n\n\n## Recall: Introduction to Ratio Estimators {.font80}\n\n::: cle6\n\nRatio estimators are utilized for their efficiency in estimating population parameters where relationships are proportional. For instance, they can effectively estimate the total sugar content in oranges based on their weight, providing a quick method compared to direct measurements.\n\nThe estimator for the population ratio $R$ is given by:\n$$\nr = \\frac{\\bar{y}}{\\bar{x}} = \\frac{\\sum_{i=1}^n y_i}{\\sum_{i=1}^n x_i}\n$$\nwhere $\\bar{y}$ and $\\bar{x}$ are the sample means of sugar content ($y_i$) and weight ($x_i$) of oranges respectively.\n\n:::\n\n## Variance of Ratio Estimator {.font80}\n\n::: cle6\n\nUnderstanding the variability of our ratio estimator is crucial for assessing the reliability of our sugar content estimations based on orange weights.\nThe estimated variance of $r$, when $\\mu_x$ (mean weight per unit in the population) is known:\n$$\n\\hat{V}(r) = \\left(1-\\frac{n}{N}\\right) \\cdot \\left(\\frac{1}{\\mu_x^2}\\right) \\cdot \\frac{s_r^2}{n}\n$$\nwhere $s_r^2 = \\frac{\\sum_{i=1}^n (y_i - r x_i)^2}{n-1}$.\n\n:::\n\n## Ratio Estimator of Population Total $\\tau_y$ {.font80}\n\n::: cle6\n\nEstimating the total sugar content efficiently allows businesses to manage their inventory more effectively. \n$$\n\\hat{\\tau}_y = r \\cdot \\tau_x\n$$\n$\\tau_x = N \\mu_x$ represents the total weight of the orange shipment.\n\n:::\n\n## Variance of $\\hat{\\tau}_y$ {.font80}\n\n::: cle6\n\nQuantifying the uncertainty in our total sugar content estimate helps in making informed decisions:\n$$\n\\hat{V}(\\hat{\\tau}_y) = \\left(N \\mu_x\\right)^2 \\cdot \\hat{V}(r) = N^2 \\left(1-\\frac{n}{N}\\right) \\cdot \\frac{s_r^2}{n}\n$$\n\n:::\n\n## Ratio Estimator of Population Mean $\\mu_y$ {.font80}\n\n::: cle6\n\nRatio estimators also aid in predicting the average sugar content per orange, which is vital for quality control.\n$$\n\\hat{\\mu}_y = r \\cdot \\mu_x\n$$\n\n:::\n\n## Variance and Confidence Interval {.font80}\n\n::: cle6\n\nProviding confidence intervals around our estimates assures stakeholders of the precision of our sugar content assessments:\n$$\n\\hat{V}(\\hat{\\mu}_y) = \\mu_x^2 \\cdot \\hat{V}(r) = \\left(1-\\frac{n}{N}\\right) \\cdot \\frac{s_r^2}{n}\n$$\n$$\n\\hat{\\mu}_y \\pm t_{1-\\frac{\\alpha}{2}, n-1} \\cdot \\sqrt{\\hat{V}(\\hat{\\mu}_y)}\n$$\n\n:::\n\n\n## {.font50}\n\n> Example 1: (Textbook Ex 6.1) A forester is interested in estimating the total volume of trees in a timber sale. He records the volume for each tree in a simple random sample. In addition, he measures the basal area for each tree marked for sale. He then uses a ratio estimator of total volume. The forester decides to take a simple random sample of $n=12$ from the $N=250$ trees marked for sale. Let $x$ denote basal area and $y$ the cubic-foot volume for a tree. The total basal area for all 250 trees, $\\tau_x$, is 75 square feet. Use the data in the accompanying table to estimate $\\tau_y$, the total cubic-foot volume for those trees marked for sale, and place a bound on the error of estimation.\n\n![](images/Day19-1.png)\n\n##\n\n::: panel-tabset\n\n### Scatter-plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Day19_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n\n\n### R-code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\ndata <- data.frame(\n  id = 1:12,\n  x = c(0.3, 0.5, 0.4, 0.9, 0.7, 0.2, 0.6, 0.5, 0.8, 0.4, 0.8, 0.6),\n  y = c(6, 9, 7, 19, 15, 5, 12, 9, 20, 9, 18, 13)\n)\n\nggplot(data, aes(x = x, y = y)) +\n  geom_point() + \n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(title = \"Scatterplot of Volume vs. Basal Area\",\n       x = \"Basal Area\", y = \"Volume\")\n```\n:::\n\n\n\n:::\n\n##\n\n\n## {.font50}\n\n> Example 2: (Textbook Ex 6.4) A corporation is interested in estimating the total earnings from sales of color television sets at the end of a three-month period. The total earnings figures are available for all districts within the corporation for the corresponding three-month period of the previous year. A simple random sample of 13 district offices is selected from the 123 offices within the corporation. Using a ratio estimator, estimate $\\tau_y$ and place a bound on the error of estimation. Use the data in the accompanying table and take $\\tau_x=128,200$\n\n\n![](images/Day19-2.png)\n\n##\n\n\n## {.font50}\n\n> Example 3: (Textbook Ex 6.6) An investigator has a colony of $N=763$ rats that have been subjected to a standard drug. The average length of time to thread a maze correctly under the influence of the standard drug was found to be $\\mu_x=17.2$ seconds. The investigator now would like to subject a random sample of 11 rats to a new drug. Estimate the average time required to thread the maze while under the influence of the new drug. (The data are shown in the accompanying table.) Place a bound on the error of estimation. \n\n![](images/Day19-3.png)\n\n\n\n##\n\n\n\n\n",
    "supporting": [
      "Day19_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}