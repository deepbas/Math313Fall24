{
  "hash": "9a0848434775f8a8484eabb29a2a3f35",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 36\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"MATH 313: Survey Design and Sampling\"\nauthor: \"\"\nformat:\n  revealjs:\n    html-math-method: mathjax\n    mathjax-url: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/MathJax.js\"\n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: \n      src: chalkboard.json\n      eraser:\n        src: 'img/sponge.png'\n        radius: 20\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n\n\n## Direct vs. Inverse Sampling Techniques {.font80}\n\n::: cle6\n\n### Key Differences\n\n- **Direct Sampling**: Tag animals, recapture randomly, and count recaptures to estimate population size. The number of recaptures isn't fixed and depends on the sample size.\n- **Inverse Sampling**: Continue sampling until a fixed number of previously tagged animals are recaptured. This method can yield more precise information than direct sampling if the second sample size $n$ is appropriately small relative to the total population $N$.\n\n### Considerations\n\n- Inverse sampling can require a disproportionately large $n$ if the initial sample size $t$ is poorly chosen and nothing is known about $N$.\n\n:::\n\n\n## Mathematical Model {.font60}\n\n::: cle9\n\n$$\np_1=\\frac{t}{N} \\quad \\text{and} \\quad p_2=\\frac{n}{N}\n$$\n\n- **$p_1$ (First Sampling Fraction)**: Represents the proportion of the total population $N$ sampled initially.\n- **$p_2$ (Second Sampling Fraction)**: Signifies the proportion of the total population sampled during the recapture phase. It is critical for adjusting the precision of the population estimate.\n\n$$\n\\frac{V(\\hat{N})}{N} \\approx \\frac{1-p_1}{p_1 p_2}\n$$\n\n- This formula shows how the variance of the estimated population size $\\hat{N}$ relative to the population size $N$ depends inversely on both $p_1$ and $p_2$.\n\n:::\n\n\n\n## Optimizing Sampling Fractions {.font60}\n\n::: cle12\n\n### Example Scenario\n\n- **Context**: Estimating deer population which is similar in size to the previous year (800 to 1000 deer).\n- **Objective**: Minimize total sample size while bounding the error within 200.\n\n### Strategy\n\n- Choose $p_1$ and $p_2$ to minimize total effort for a given precision.\n- Graphical tools help visualize and select optimal sampling fractions.\n\n### Optimal Fractions\n\n- **Example 10.3a**: $p_1 = 31.5\\%$, $p_2 = 21.7\\%$ yields a standard deviation of ~100.\n- **Example 10.3b**: Similar approach with a targeted number of recaptures leading to nearly identical $p_2$.\n\n:::\n\n\n## Advanced Techniques and Multistage Sampling {.font70}\n\n::: cle3\n\n### Extending Basic Techniques\n\n- Beyond two stages: Tag additional untagged animals in subsequent samples.\n- Multistage approaches improve estimator accuracy for $N$ and are useful in continuous studies.\n\n### Considerations\n\n- Adjust for demographic changes and varying capture probabilities.\n- See Seber (1982, 1986) for advanced methods.\n\n### Visual Tool\n\n- Our interactive Shiny app simplifies these complex calculations and allows for dynamic adjustment and visualization of $p_1$ and $p_2$ interaction.\n\n:::\n\n\n##\n\n\n\n```{=html}\n<iframe width=\"1280\" height=\"1300\" src=\"https://shinylive.io/r/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKAZwAtaJWAlAB0IdJiw4BzSampFSAJmEQRAYgAEAETgAzPnHUBVAJIiArrXUAeALTqd1CwBMAClElx2I9etK1S1HBuEHDUXmAAyrCyfJLqAGLMBH4k6sZkcIyyUKxCYAK43uqctE5w9CwAMjlEZqReED4+JWUVjMGhDU1NnHRljOmodeGoAIx5uOp58bSMnKTqUTAxEHGJUMm0qexjwnhTjd1Hxz4wfOoAvOoADBjXo5MwUAAel+oP6gBuUI4GV7cfeZwVBvW7Xa4AVgKRW6EDM8EYtAIg2GeQAchMpmAAILoRhEZ60J7kdQuIhDahQFKNCK0ABeBnYaL2k2+vzeAE5wY9zldRtziuQQXzrtDDrD4ZkkSj6nlOE5MXkACosDwLCKkKAQJwsJxaOCfWhUrYqfZssx-d4Cs6NEWTIHC97Kbpi7pPPgdMIwpqyeQAeTqQ1lYF9pDyrqO5GepADpCDIwUtTjdXDhXFTSjMcDqLAzBSsaD4e9zvUymUan1ehCxUyn0y6jkkiRIk4tfrtnsZggmxI7D4QcmSaDAnUICKQ7qABJUInswsO4wKP0lXBo+wx+m0dY7P2pxj02Nt+pd6Rp+N0-KjyfJ-Lvd6NABhH4EMyUkmkbgGEIEOCcTgSdQZ3UMwSlWXxP3URc3xNHhaBBAA1JkRyuLcACp1HYUZ1DsXZ1AAegww90JnEsfCAjtMOwwDRhHAidiw9CuCcAA9BR8PUZlSMAtiO1oHRQlbHY2IAPneSYPj4gTPHIm5JmuSYSK471UCgIFwgiOBiG1RZojoMD1h7RohIERBMXxLsnCEyYABYBBLABfctDgnU88y2As6iPRdtUyFc1w3bot14iAg0nfdukPYLQrGb1LyiqdbwPHi7EonCaPY+j1EY+VWPYzjlOS49+OoQSgNEj4JOK0qeNk2rFLvdM3KII9Uuo2jCIY7iuJUtTlQgpr1EQtFuCpAQ8K3KlwNoThjwyOZNOpY8ZrQVB8UJYlQlYUz9nM7V2Camy7KKRyinHOdpzkec7G8-oXEu9dvSCncQr3ZSsPi08YovPUPpvBUkparC0vazLspYtiCPygHeKq6SRLEhHJJKuHrFq+SuqU9MnB0I8dU1DAdGYeBMquVsAEd2DBCrJkCVYPwwJM3n5UUuOx6dCtatncLornOqY3LIaOrGdHZq9YfYLn4epoqpIlkWZPR9HJaF7pvWkUM5cmKBf3YV4rjGSZWDeRT1AAam9HwPCIGAAH09M8EdzfTS24Gtm3UCIPh6m1zhdeNj4jf1pRJjxqA3lDgmiekrD9Y+ICg4KdRiDkRg3jyRcFX2EoGTeWyzYt9Qrdtz57d1r3Mh-VAFljmn9FIVhUEtPIdR4OBM8mZOiFTq48noX5w3z53C9d23uFL1hy8YSvq+42uQnrxu07AFvP3bpOiBTpe+4tAeneOSl6F9vwAibsB0nILJKSN+g4FIAB3OAKASWZ5nULU9Q0rSP902IEiSalOATALkcPWWIZhzHVD-fS-8TQdRZMA7ogcsSfxIN-ZYek1gwO2CRXeBcPxwHgDbG0RIfjsAcsoeyIgKxYC7OBAwK06AEGNKkFsvB+C4lQOwCwbwLD2jbN3GsjA6yMGUGAeyABdIAA\"></iframe>\n```\n\n\n\n\n\n## Introduction to Quadrat Sampling {.font80}\n\n::: cle6\nQuadrat sampling is a method used to estimate the number of elements within a fixed location. It calculates density per unit area and extrapolates this to estimate the total population size.\n\n- **Setup**: A total area $A$ is divided into $m$ plots, each of area $a$. The total number of plots in the region is $M$, so $A = M \\cdot a$.\n- **Data Collection**: Count the number of individuals in each randomly selected plot or quadrat.\n:::\n\n## Estimating Density and Population Size {.font80}\n\n::: cle13\n- **Density Estimation**:\n  $$\n  \\hat{\\lambda} = \\frac{\\bar{n}}{a}\n  $$\n  where $\\bar{n}$ is the average count per plot from the sampled quadrats.\n- **Population Size Estimation**:\n  $$\n  \\hat{N} = \\hat{\\lambda} \\cdot A\n  $$\n:::\n\n## Variance and Confidence Interval {.font70}\n\n::: cle14\n- **Variance of the Density Estimator**:\n  $$\n  \\hat{V}(\\hat{\\lambda})=\\frac{1}{a^2} \\cdot \\frac{S_n^2}{m}\n  $$\n  where $S_n^2=\\frac{\\sum_{i=1}^m(n_i-\\bar{n})^2}{m-1}$\n\n- **Population Size Variance**:\n  $$\n  \\hat{V}(\\hat{N})=A^2 \\cdot \\hat{V}(\\hat{\\lambda})\n  $$\n\n- **Confidence Interval**:\n  $$\n  \\hat{N} \\pm B\n  $$\n  where $B = t_{\\frac{\\alpha}{2}, m-1} \\cdot \\sqrt{\\hat{V}(\\hat{N})}$ is the bound on the error of estimation.\n:::\n\n\n\n## Example 1: Estimating Fire Ant Density {.font60}\n\n> In Florida, a study to estimate the density of fire ant hills used 50 quadrats, each of 16 $m^2$. The counts of ant hills per quadrat varied, allowing for an estimate of ant hill density per unit area.\n\n| Number of hills | Frequency |\n| :---: | :---: |\n| 0 | 13 |\n| 1 | 8 |\n| 2 | 12 |\n| 3 | 10 |\n| 4 | 5 |\n| 5 | 2 |\n|  | 50 |\n\n\n##\n\n## Example 2: Estimating Disease Prevalence in Trees {.font60}\n\n> The density of trees having fusiform rust on a southern-pine plantation of 200 acres is to be estimated from a sample of $m=10$ quadrats of 0.5 acre each. The ten sampled plots had an average of 2.8 infected trees per quadrat.\n\n\na. Estimate the density of infected trees and place a $95 \\%$ bound on the error of estimation.\n\n::: custom-space\n:::\n\nb. Estimate the total number of infected trees and place a $95 \\%$ bound on the error of estimation.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}